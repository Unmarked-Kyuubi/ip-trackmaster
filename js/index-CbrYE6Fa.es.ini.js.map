{"version":3,"file":"index-CbrYE6Fa.es.ini.js","sources":["../../src/js/main.js"],"sourcesContent":["//  GEOLOCATION API\n\nconst mainInput = document.querySelector(\".main__input\")\nconst mainInputSubmitButton = document.querySelector(\".main__input-submit\")\nconst ipAddressText = document.querySelector(\"[data-ip-address]\")\nconst locationText = document.querySelector(\"[data-location]\")\nconst timezoneText = document.querySelector(\"[data-timezone]\")\nconst ispText = document.querySelector(\"[data-isp]\")\nconst mainErrorMessage = document.querySelector(\".main__input-error-text\")\n\n// Leaflet js code\n\nconst map = L.map(\"ip-map\")\n\nL.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n\tmaxZoom: 19,\n\tattribution:\n\t\t'&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n}).addTo(map)\n\nconst markerOptions = {\n\triseOnHover: true,\n\topacity: 0.75,\n\t// icon: {\n\t// \tDefault: {\n\t// \t\timagePath: '../assets/logo/logo.svg'\n\n\t// \t}\n\t// }\n}\n\n// L.Icon.Default.prototype.options.imagePath = 'https://i.ibb.co/hZCZKkm/location-indicator-red.png'\n// L.Icon.Default.prototype.options.imagePath = 'https://i.postimg.cc/tgrc5y6f/icon-location.png'\n\n/*\n<a href=\"https://imgbb.com/\"><img src=\"\" alt=\"location-indicator-red\" border=\"0\" /></a>\n\n<a href=\"https://ibb.co/hZCZKkm\"><img src=\"https://i.ibb.co/hZCZKkm/location-indicator-red.png\" alt=\"location-indicator-red\" border=\"0\" /></a>\n*/\n// FUNCTION TO FETCH IP ADRESS ON BTN CLICK\n\nfunction ipfinder(input) {\n\tconsole.log(input)\n\tconst ipv4Regex =\n\t\t/(\\b25[0-5]|\\b2[0-4]\\d|\\b[01]?\\d{1,2})(\\.(25[0-5]|2[0-4]\\d|[01]?\\d{1,2})){3}/\n\tconst ipv6Regex =\n\t\t/(([\\dA-Fa-f]{1,4}:){7}[\\dA-Fa-f]{1,4}|([\\dA-Fa-f]{1,4}:){1,7}:|([\\dA-Fa-f]{1,4}:){1,6}:[\\dA-Fa-f]{1,4}|([\\dA-Fa-f]{1,4}:){1,5}(:[\\dA-Fa-f]{1,4}){1,2}|([\\dA-Fa-f]{1,4}:){1,4}(:[\\dA-Fa-f]{1,4}){1,3}|([\\dA-Fa-f]{1,4}:){1,3}(:[\\dA-Fa-f]{1,4}){1,4}|([\\dA-Fa-f]{1,4}:){1,2}(:[\\dA-Fa-f]{1,4}){1,5}|[\\dA-Fa-f]{1,4}:((:[\\dA-Fa-f]{1,4}){1,6})|:((:[\\dA-Fa-f]{1,4}){1,7}|:)|fe80:(:[\\dA-Fa-f]{0,4}){0,4}%[\\dA-Za-z]+|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}\\d){0,1}\\d)\\.){3}(25[0-5]|(2[0-4]|1{0,1}\\d){0,1}\\d)|([\\dA-Fa-f]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}\\d){0,1}\\d)\\.){3}(25[0-5]|(2[0-4]|1{0,1}\\d){0,1}\\d))/\n\t// console.log(`${ip}`)\n\tif (ipv4Regex.test(input)) {\n\t\t// console.log(ip.parseInt())\n\t\tfetch(\n\t\t\t`https://geo.ipify.org/api/v2/country,city?apiKey=at_bcUpYeNeZIf6mxn9u1xdjtjAlpERl&ipAddress=${input}`,\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((ipData) => {\n\t\t\t\tconsole.log(ipData)\n\t\t\t\tconsole.log(ipData.ip)\n\t\t\t\t// const initialIp =\n\n\t\t\t\tipAddressText.textContent = ipData.ip\n\t\t\t\tispText.textContent = ipData.isp\n\t\t\t\ttimezoneText.textContent = ` ${ipData.location.timezone}`\n\t\t\t\tlocationText.textContent = ` ${ipData.location.city}, ${ipData.location.country} ${ipData.location.postalCode}`\n\t\t\t\tconst { lng: longitude, lat: latitude, city, region } = ipData.location\n\t\t\t\tmap.center = [latitude, longitude]\n\t\t\t\tmap.flyTo([latitude, longitude], 14)\n\t\t\t\tL.marker([latitude, longitude], markerOptions)\n\t\t\t\t\t.addTo(map)\n\t\t\t\t\t.bindPopup(`${city}, ${region}`, {\n\t\t\t\t\t\toffset: L.point(0, -1),\n\t\t\t\t\t})\n\t\t\t\t// popup.setLatLng([latitude, longitude]).setContent(`${city}, ${region}`).openOn(map);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\n\t\t\t\tif (error instanceof TypeError) {\n\t\t\t\t\tmainInput.classList.add(\"main__input--error\")\n\t\t\t\t\tmainErrorMessage.textContent = \"Enter a valid IP address\"\n\n\t\t\t\t\tipAddressText.textContent = \"--.--.--.--\"\n\t\t\t\t\tispText.textContent = \"--\"\n\t\t\t\t\ttimezoneText.textContent = `--`\n\t\t\t\t\tlocationText.textContent = `--`\n\t\t\t\t}\n\t\t\t})\n\n\t\tconsole.log(`Not an IPaddress ${input}`)\n\t}\n\t// IF NOT AN IP ADDRESS FROM REGEX RUN FETCH API FOR DOMAIN\n\telse {\n\t\t// console.log\n\t\tfetch(\n\t\t\t`https://geo.ipify.org/api/v2/country,city?apiKey=at_bcUpYeNeZIf6mxn9u1xdjtjAlpERl&domain=${input}`,\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((ipData) => {\n\t\t\t\tconsole.log(ipData)\n\t\t\t\tconsole.log(ipData.ip)\n\t\t\t\t// const initialIp =\n\n\t\t\t\tipAddressText.textContent = ipData.ip\n\t\t\t\tispText.textContent = ipData.isp\n\t\t\t\ttimezoneText.textContent = ` ${ipData.location.timezone}`\n\t\t\t\tlocationText.textContent = ` ${ipData.location.city}, ${ipData.location.country} ${ipData.location.postalCode}`\n\n\t\t\t\tconst { lng: longitude, lat: latitude, city, region } = ipData.location\n\t\t\t\tmap.center = [latitude, longitude]\n\t\t\t\tmap.flyTo([latitude, longitude], 14)\n\t\t\t\tL.marker([latitude, longitude], markerOptions)\n\t\t\t\t\t.addTo(map)\n\t\t\t\t\t.bindPopup(`${city}, ${region}`, {\n\t\t\t\t\t\toffset: L.point(0, -1),\n\t\t\t\t\t})\n\t\t\t\t// popup.setLatLng([latitude, longitude]).setContent(`${city}, ${region}`).openOn(map);\n\t\t\t})\n\t\t\t// ERROR HANDLING IF A TYPE ERROR IS ENCOUNTERED ENAblE ERROR CLASS AND INITIALIZE TEXT TO --\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tif (error instanceof TypeError) {\n\t\t\t\t\tmainInput.classList.add(\"main__input--error\")\n\n\t\t\t\t\tmainErrorMessage.textContent = \"Enter a valid Domain\"\n\t\t\t\t\tipAddressText.textContent = \"--.--.--.--\"\n\t\t\t\t\tispText.textContent = \"--\"\n\t\t\t\t\ttimezoneText.textContent = `--`\n\t\t\t\t\tlocationText.textContent = `--`\n\t\t\t\t}\n\t\t\t\t// else if(error instanceof )\n\t\t\t})\n\t}\n}\n\n// INitial code to fetch IP address\nfetch(\n\t\"https://geo.ipify.org/api/v2/country,city?apiKey=at_bcUpYeNeZIf6mxn9u1xdjtjAlpERl\",\n)\n\t.then((response) => response.json())\n\t.then((ipData) => {\n\t\tconsole.log(ipData)\n\t\tconsole.log(ipData.ip)\n\t\tconst initialIp = ipData.ip\n\n\t\tipAddressText.textContent = initialIp\n\t\tispText.textContent = ipData.isp\n\t\ttimezoneText.textContent = ` ${ipData.location.timezone}`\n\t\tlocationText.textContent = ` ${ipData.location.city}, ${ipData.location.country} ${ipData.location.postalCode}`\n\t\tconst { lng: longitude, lat: latitude, city, region } = ipData.location\n\n\t\t// const map = L.map(\"ip-map\", {\n\t\t// \tcenter: [longitude, latitude],\n\t\t// \tzoom: 13,\n\t\t// })\n\t\tconsole.log(longitude)\n\t\tconsole.log(latitude)\n\t\tmap.center = [latitude, longitude]\n\t\tmap.setView([latitude, longitude], 14)\n\t\tL.marker([latitude, longitude], markerOptions)\n\t\t\t.addTo(map)\n\t\t\t.bindPopup(`${city}, ${region}`, {\n\t\t\t\toffset: L.point(0, -1),\n\t\t\t})\n\t\t// popup.setLatLng([latitude, longitude]).setContent(`${city}, ${region}`).openOn(map);\n\n\t\tconsole.log(map)\n\t})\n\nmainInputSubmitButton.addEventListener(\"click\", () => {\n\tmainInput.classList.remove(\"main__input--error\")\n\n\t// mainInput.value\n\tipfinder(mainInput.value)\n})\ndocument.addEventListener(\"keydown\", (event) => {\n\t//\n\tif (event.key === \"Enter\") {\n\t\tmainInput.classList.remove(\"main__input--error\")\n\t\tipfinder(mainInput.value)\n\t}\n})\n\n/// DOMAIN NEXT\n/// REGex\n"],"names":["mainInput","mainInputSubmitButton","ipAddressText","locationText","timezoneText","ispText","mainErrorMessage","map","markerOptions","ipfinder","input","response","ipData","longitude","latitude","city","region","error","initialIp","event"],"mappings":"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"}